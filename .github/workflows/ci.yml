name: CI/CD Pipeline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: "true"
  AWS_REGION: us-east-1
  ECR_REPO: 035754837020.dkr.ecr.us-east-1.amazonaws.com/ai-oracle-api
  IMAGE_TAG: latest

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Start FastAPI in background
        run: |
          nohup uvicorn scripts.inference_api:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: Wait for FastAPI to be ready
        run: |
          for i in {1..10}; do
            curl -s http://localhost:8000/health && break
            echo "Waiting for API..." && sleep 2
          done

      - name: Run tests with coverage
        run: |
          pytest --cov=scripts --cov-fail-under=80 --cov-report=term-missing

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: .coverage

  build-and-push-image:
    needs: run-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REPO:$IMAGE_TAG

  deploy-to-prod:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}

      - name: Debug SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" | tr -d '\r' | sed 's/\\n/\n/g' > ~/.ssh/ai-oracle-key.pem
          chmod 600 ~/.ssh/ai-oracle-key.pem
          echo "PEM preview:"
          head -n 5 ~/.ssh/ai-oracle-key.pem
        shell: bash
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

          script: |
            docker login -u AWS -p $(aws ecr get-login-password --region ${{ env.AWS_REGION }}) ${{ env.ECR_REPO }}
            docker pull $ECR_REPO:$IMAGE_TAG
            docker stop oracle-api || true
            docker rm oracle-api || true
            docker run -d --name oracle-api -p 80:8000 $ECR_REPO:$IMAGE_TAG
